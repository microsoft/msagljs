"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[924],{9916:(e,r,a)=>{a.d(r,{xA:()=>p,yg:()=>m});var n=a(3696);function t(e,r,a){return r in e?Object.defineProperty(e,r,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[r]=a,e}function l(e,r){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var r=1;r<arguments.length;r++){var a=null!=arguments[r]?arguments[r]:{};r%2?l(Object(a),!0).forEach((function(r){t(e,r,a[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(a,r))}))}return e}function s(e,r){if(null==e)return{};var a,n,t=function(e,r){if(null==e)return{};var a,n,t={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],r.indexOf(a)>=0||(t[a]=e[a]);return t}(e,r);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],r.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(t[a]=e[a])}return t}var i=n.createContext({}),u=function(e){var r=n.useContext(i),a=r;return e&&(a="function"==typeof e?e(r):o(o({},r),e)),a},p=function(e){var r=u(e.components);return n.createElement(i.Provider,{value:r},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},g=n.forwardRef((function(e,r){var a=e.components,t=e.mdxType,l=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),c=u(a),g=t,m=c["".concat(i,".").concat(g)]||c[g]||d[g]||l;return a?n.createElement(m,o(o({ref:r},p),{},{components:a})):n.createElement(m,o({ref:r},p))}));function m(e,r){var a=arguments,t=r&&r.mdxType;if("string"==typeof e||t){var l=a.length,o=new Array(l);o[0]=g;var s={};for(var i in r)hasOwnProperty.call(r,i)&&(s[i]=r[i]);s.originalType=e,s[c]="string"==typeof e?e:t,o[1]=s;for(var u=2;u<l;u++)o[u]=a[u];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}g.displayName="MDXCreateElement"},5217:(e,r,a)=>{a.d(r,{A:()=>s});var n=a(3696),t=a(5715),l=a(8017);const o={mr1:"mr1_wIym",hidemobile:"hidemobile_Efjn"};function s(e){const{className:r,editorId:a,text:s,label:i="Edit",title:u="Load code in side editor"}=e,{setSource:p}=(0,t.Ay)();return n.createElement("button",{type:"button",title:u,className:(0,l.A)(o.hidemobile,o.mr1,r||"button button--primary"),onClick:()=>p(a,s)},i)}},2124:(e,r,a)=>{a.r(r),a.d(r,{assets:()=>j,contentTitle:()=>O,default:()=>V,frontMatter:()=>S,metadata:()=>E,toc:()=>G});var n=a(8102),t=a(3696),l=a(9916),o=a(8017),s=a(766),i=a(9519),u=a(5043),p=a(4544),c=a(8708);function d(e){return function(e){return t.Children.map(e,(e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:r}=e;return!!r&&"object"==typeof r&&"value"in r}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:r,label:a,attributes:n,default:t}}=e;return{value:r,label:a,attributes:n,default:t}}))}function g(e){const{values:r,children:a}=e;return(0,t.useMemo)((()=>{const e=r??d(a);return function(e){const r=(0,p.X)(e,((e,r)=>e.value===r.value));if(r.length>0)throw new Error(`Docusaurus error: Duplicate values "${r.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[r,a])}function m(e){let{value:r,tabValues:a}=e;return a.some((e=>e.value===r))}function h(e){let{queryString:r=!1,groupId:a}=e;const n=(0,i.W6)(),l=function(e){let{queryString:r=!1,groupId:a}=e;if("string"==typeof r)return r;if(!1===r)return null;if(!0===r&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:r,groupId:a});return[(0,u.aZ)(l),(0,t.useCallback)((e=>{if(!l)return;const r=new URLSearchParams(n.location.search);r.set(l,e),n.replace({...n.location,search:r.toString()})}),[l,n])]}function y(e){const{defaultValue:r,queryString:a=!1,groupId:n}=e,l=g(e),[o,s]=(0,t.useState)((()=>function(e){let{defaultValue:r,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(r){if(!m({value:r,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${r}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return r}const n=a.find((e=>e.default))??a[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:r,tabValues:l}))),[i,u]=h({queryString:a,groupId:n}),[p,d]=function(e){let{groupId:r}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(r),[n,l]=(0,c.Dv)(a);return[n,(0,t.useCallback)((e=>{a&&l.set(e)}),[a,l])]}({groupId:n}),y=(()=>{const e=i??p;return m({value:e,tabValues:l})?e:null})();(0,t.useLayoutEffect)((()=>{y&&s(y)}),[y]);return{selectedValue:o,selectValue:(0,t.useCallback)((e=>{if(!m({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);s(e),u(e),d(e)}),[u,d,l]),tabValues:l}}var b=a(6681);const f={tabList:"tabList_J5MA",tabItem:"tabItem_l0OV"};function v(e){let{className:r,block:a,selectedValue:l,selectValue:i,tabValues:u}=e;const p=[],{blockElementScrollPositionUntilNextRender:c}=(0,s.a_)(),d=e=>{const r=e.currentTarget,a=p.indexOf(r),n=u[a].value;n!==l&&(c(r),i(n))},g=e=>{let r=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const a=p.indexOf(e.currentTarget)+1;r=p[a]??p[0];break}case"ArrowLeft":{const a=p.indexOf(e.currentTarget)-1;r=p[a]??p[p.length-1];break}}r?.focus()};return t.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.A)("tabs",{"tabs--block":a},r)},u.map((e=>{let{value:r,label:a,attributes:s}=e;return t.createElement("li",(0,n.A)({role:"tab",tabIndex:l===r?0:-1,"aria-selected":l===r,key:r,ref:e=>p.push(e),onKeyDown:g,onClick:d},s,{className:(0,o.A)("tabs__item",f.tabItem,s?.className,{"tabs__item--active":l===r})}),a??r)})))}function w(e){let{lazy:r,children:a,selectedValue:n}=e;const l=(Array.isArray(a)?a:[a]).filter(Boolean);if(r){const e=l.find((e=>e.props.value===n));return e?(0,t.cloneElement)(e,{className:"margin-top--md"}):null}return t.createElement("div",{className:"margin-top--md"},l.map(((e,r)=>(0,t.cloneElement)(e,{key:r,hidden:e.props.value!==n}))))}function N(e){const r=y(e);return t.createElement("div",{className:(0,o.A)("tabs-container",f.tabList)},t.createElement(v,(0,n.A)({},e,r)),t.createElement(w,(0,n.A)({},e,r)))}function T(e){const r=(0,b.A)();return t.createElement(N,(0,n.A)({key:String(r)},e))}const k={tabItem:"tabItem_wHwb"};function x(e){let{children:r,hidden:a,className:n}=e;return t.createElement("div",{role:"tabpanel",className:(0,o.A)(k.tabItem,n),hidden:a},r)}var I=a(5217);const S={sidebar_position:2},O="Getting Started",E={unversionedId:"getting-started",id:"getting-started",title:"Getting Started",description:"MSAGLJS usage primarily falls into three categories: interacting with the core layout engine, the SVG renderer, or the Deck.gl renderer.",source:"@site/docs/getting-started.md",sourceDirName:".",slug:"/getting-started",permalink:"/msagljs/docs/getting-started",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/msagljs/docs/intro"},next:{title:"Configuration of the renderers",permalink:"/msagljs/docs/configuration"}},j={},G=[{value:"Installation",id:"installation",level:2},{value:"Build",id:"build",level:2},{value:"Running the examples",id:"running-the-examples",level:2},{value:"Usage of renderers",id:"usage-of-renderers",level:2},{value:"Create a graph and pass it to the renderer",id:"create-a-graph-and-pass-it-to-the-renderer",level:3},{value:"Create a Graph object from a file",id:"create-a-graph-object-from-a-file",level:3},{value:"From DOT",id:"from-dot",level:4},{value:"From JSON",id:"from-json",level:4},{value:"From &quot;.txt&quot;, &quot;tsv&quot;, or &quot;.csv&quot;",id:"from-txt-tsv-or-csv",level:4}],D={toc:G},A="wrapper";function V(e){let{components:r,...a}=e;return(0,l.yg)(A,(0,n.A)({},D,a,{components:r,mdxType:"MDXLayout"}),(0,l.yg)("h1",{id:"getting-started"},"Getting Started"),(0,l.yg)("p",null,"MSAGLJS usage primarily falls into three categories: interacting with the core layout engine, the SVG renderer, or the Deck.gl renderer."),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"If you are only interested in getting the layout of a graph, you can use the core layout engine, that is ",(0,l.yg)("inlineCode",{parentName:"li"},"@msagl/core")," package."),(0,l.yg)("li",{parentName:"ul"},"If your intention is to render, and possibly edit, a graph in an Internet browser, you can use the SVG renderer, that is in the ",(0,l.yg)("inlineCode",{parentName:"li"},"@msagl/renderer-svg")," package."),(0,l.yg)("li",{parentName:"ul"},"The third option, the Deck.gl renderer, from the ",(0,l.yg)("inlineCode",{parentName:"li"},"@msagl/renderer-webgl")," package, is where you explore a larger graph in an Internet browser. The renderer uses the visualization style similar to online maps.")),(0,l.yg)("h2",{id:"installation"},"Installation"),(0,l.yg)("p",null,"If you use only the core layout engine, you can install just the ",(0,l.yg)("inlineCode",{parentName:"p"},"@msagl/core")," package:"),(0,l.yg)(T,{groupId:"npm2yarn",mdxType:"Tabs"},(0,l.yg)(x,{value:"npm",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},"npm install @msagl/core\n"))),(0,l.yg)(x,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},"yarn add @msagl/core\n"))),(0,l.yg)(x,{value:"pnpm",label:"pnpm",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},"pnpm add @msagl/core\n")))),(0,l.yg)("p",null,"If you use the SVG renderer, you need to install @msagl/renderer-svg:"),(0,l.yg)(T,{groupId:"npm2yarn",mdxType:"Tabs"},(0,l.yg)(x,{value:"npm",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},"npm install @msagl/renderer-svg\n"))),(0,l.yg)(x,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},"yarn add @msagl/renderer-svg\n"))),(0,l.yg)(x,{value:"pnpm",label:"pnpm",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},"pnpm add @msagl/renderer-svg\n")))),(0,l.yg)("p",null,"If you use the Deck.gl renderer, you need to install @msagl/renderer-webgl:"),(0,l.yg)(T,{groupId:"npm2yarn",mdxType:"Tabs"},(0,l.yg)(x,{value:"npm",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},"npm install @msagl/renderer-webgl\n"))),(0,l.yg)(x,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},"yarn add @msagl/renderer-webgl\n"))),(0,l.yg)(x,{value:"pnpm",label:"pnpm",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},"pnpm add @msagl/renderer-webgl\n")))),(0,l.yg)("h2",{id:"build"},"Build"),(0,l.yg)("p",null,"We recommend building MSAGLJS under linux, or under Windows WSL."),(0,l.yg)(T,{groupId:"npm2yarn",mdxType:"Tabs"},(0,l.yg)(x,{value:"npm",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},"npm run build\n"))),(0,l.yg)(x,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},"yarn build\n"))),(0,l.yg)(x,{value:"pnpm",label:"pnpm",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},"pnpm run build\n")))),(0,l.yg)("p",null,"builds MSAGLJS locally when ran in the root of the repository."),(0,l.yg)("h2",{id:"running-the-examples"},"Running the examples"),(0,l.yg)("p",null,"To run the examples locally, with your local changes, follow this pattern:"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre"},"cd examples/webgl-renderer\nyarn start\n")),(0,l.yg)("p",null,"You should see output similar to the one below:"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre"},"> Local:   http://127.0.0.1:8001/\n> Network: http://172.31.24.74:8001\n")),(0,l.yg)("p",null,"Follow (ctrl+click), or copy paste one of these link addresses in a browser to run the example."),(0,l.yg)("h2",{id:"usage-of-renderers"},"Usage of renderers"),(0,l.yg)("h3",{id:"create-a-graph-and-pass-it-to-the-renderer"},"Create a graph and pass it to the renderer"),(0,l.yg)("p",null,"Here is a fragment from the ",(0,l.yg)("a",{parentName:"p",href:"https://microsoft.github.io/msagljs/renderer-svg-no-parser/index.html"},"example"),",\nwhere a Graph object, together with two nodes and an edge, is created from scratch.\nYou can read about involved types in ",(0,l.yg)("a",{parentName:"p",href:"/msagljs/docs/api"},"API of @msagl/core"),". "),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-ts",metastring:"build",build:!0},"import {RendererSvg} from '@msagl/renderer-svg'\nimport {Node, Graph, Edge} from '@msagl/core'\n\nconst viewer = document.getElementById('viewer')\nconst svgRenderer = new RendererSvg(viewer)\nsvgRenderer.layoutEditingEnabled = false\n\nconst graph = createGraph()\nsvgRenderer.setGraph(graph)\n\nfunction createGraph(): Graph {\n  //First we create a Graph object\n  const graph = new Graph()\n  // add some nodes and edges to the graph.\n  // add a node with id 'b'\n  const b = new Node('b')\n  graph.addNode(b)\n  // add a node with id 'c'\n  const c = new Node('c')\n  graph.addNode(c)\n  // create edge from b to c\n  const bc = new Edge(b, c)\n  new Edge(b, c)\n  return graph\n}\n")),(0,l.yg)("h3",{id:"create-a-graph-object-from-a-file"},"Create a Graph object from a file"),(0,l.yg)("h4",{id:"from-dot"},"From DOT"),(0,l.yg)("p",null,"A graph can be created from a string in ",(0,l.yg)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/DOT_(graph_description_language)#:~:text=DOT%20is%20a%20graph%20description,programs%20can%20process%20DOT%20files."},"DOT format"),", by using function ",(0,l.yg)("inlineCode",{parentName:"p"},"parseDot()")," in package '@msagl/parser'.\nThe function uses ",(0,l.yg)("a",{parentName:"p",href:"https://github.com/anvaka/dotparser"},"Andrei Kascha's dotparser"),".\nBelow is a ",(0,l.yg)("em",{parentName:"p"},"live"),' example: Pressing the "Edit" button brings a pane with the graph DOT string and a "Run" button. The string can be edited and\nthe graph is reloaded on a "Run" button click.'),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-dot",metastring:"edit",edit:!0},"graph G {\n    kspacey -- swilliams;\n    swilliams -- kbacon;\n    bpitt -- kbacon;\n    hford -- lwilson;\n    lwilson -- kbacon;\n}\n")),(0,l.yg)(I.A,{editorId:"dot",text:"graph G {\n\tkspacey -- swilliams;\n\tswilliams -- kbacon;\n\tbpitt -- kbacon;\n\thford -- lwilson;\n\tlwilson -- kbacon;\n}",mdxType:"SideEditorButton"}),(0,l.yg)("p",null,"Here is some of the behind the scene code."),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-ts",metastring:"build",build:!0},"import { parseDot } from '@msagl/parser'\nimport { RendererSvg } from '@msagl/renderer-svg'\nimport { Graph } from '@msagl/core'\n// create the SVG renderer\nconst renderer = new RendererSvg()\n// parse a small graph\nconst graph: Graph = parseDot(`\ngraph G {\n    kspacey -- swilliams;\n    swilliams -- kbacon;\n    bpitt -- kbacon;\n    hford -- lwilson;\n    lwilson -- kbacon;\n}`)\n// calculate the layout and render\nrenderer.setGraph(graph)\n")),(0,l.yg)("h4",{id:"from-json"},"From JSON"),(0,l.yg)("p",null,"Here we render a graph parsed from a JSON string with the DeckGL renderer"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-ts",metastring:"build",build:!0},"import { parseJSON } from '@msagl/parser'\nimport { Renderer } from '@msagl/renderer-webgl'\nimport { Graph } from '@msagl/core'\n//create a renderer\nconst renderer = new Renderer()\n// parse a graph\nconst graph: Graph = parseJSON({\n  nodes: [\n    { id: 'kspacey' },\n    { id: 'swilliams' },\n    { id: 'kbacon' },\n    { id: 'bpitt' },\n    { id: 'hford' },\n    { id: 'lwilson' },\n  ],\n  edges: [\n    { source: 'kspacey', target: 'swilliams' },\n    { source: 'swilliams', target: 'kbacon' },\n    { source: 'bpitt', target: 'kbacon' },\n    { source: 'hford', target: 'lwilson' },\n    { source: 'lwilson', target: 'kbacon' },\n  ],\n})\n// attach the graph to the renderer: this causes the layout engine to run and the graph to be rendered\nrenderer.setGraph(graph)\n")),(0,l.yg)("p",null,"Function ",(0,l.yg)("inlineCode",{parentName:"p"},"function parseJSON(json: JSONGraph | SimpleJSONGraph): Graph")," can accept an object of ",(0,l.yg)("a",{parentName:"p",href:"https://github.com/microsoft/msagljs/blob/e36c5693cd07f2a6e28d8775c7afbb54226c2022/modules/parser/src/dotparser.ts#L1224"},"SimpleJSONGraph ")," type, or as ",(0,l.yg)("a",{parentName:"p",href:"https://github.com/anvaka/dotparser/blob/934be0396f4e89f9554c52e088ff5a4ae3e5fe94/index.d.ts#L53"},"Graph of dotparser"),"."),(0,l.yg)("h4",{id:"from-txt-tsv-or-csv"},'From ".txt", "tsv", or ".csv"'),(0,l.yg)("p",null,"Function 'parseTXT()' from @msagl/parser will try to parse a file with extention '.txt', '.tsv',\nor '.csv'. Each line of the file defines an edge and expected to follow pattern \"sourceId targetId\".\nThe blank between sourceId and targetId can be replaced by a comma, or a tab character."))}V.isMDXComponent=!0}}]);